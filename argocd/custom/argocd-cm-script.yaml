apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm-script
data:
  argocd-cmp.sh: |
    #!/usr/bin/env bash
    
    if [[ "$1" == "helm" ]];then
      helm template ${ARGOCD_ENV_BASEPATH} --name-template ${ARGOCD_APP_NAME} --namespace ${ARGOCD_APP_NAMESPACE} \
        --values ${ARGOCD_ENV_VALUEFILES} > staging-manifest.yaml
    elif [ "$1" == "kustomize" ]; then
      kustomize build ${ARGOCD_ENV_BASEPATH} > staging-manifest.yaml
    fi
   
    [[ -d "vault-secret" ]] && find vault-secret -type f -name "*.yaml" | xargs -I {} sh -c "printf '\n---\n'; cat {};" > vault-secrets.yaml

    if [[ -s "vault-secrets.yaml" ]];then
      yq 'select(.metadata.annotations."avp.kubernetes.io/path"?==("k8s-kv/data/platform/*"))' vault-secrets.yaml > platform-secrets.yaml
      yq 'select(.metadata.annotations."avp.kubernetes.io/path"?==("k8s-kv/data/app/*"))' vault-secrets.yaml > app-secrets.yaml
    fi
    echo "--- platform-secrets ---" > /tmp/test.txt
    cat platform-secrets.yaml >> /tmp/test.txt
    echo "--- app-secrets ---" >> /tmp/test.txt
    cat app-secrets.yaml >> /tmp/test.txt
    echo "--- generate ---" >> /tmp/test.txt
    argocd-vault-plugin generate platform-secrets.yaml -s vault-platform-cred >> /tmp/test.txt
    [[ -s "platform-secrets.yaml" ]] && printf '\n---\n' >> staging-manifest.yaml && argocd-vault-plugin generate platform-secrets.yaml -s vault-platform-cred >> staging-manifest.yaml
    [[ -s "app-secrets.yaml" ]] && printf '\n---\n' >> staging-manifest.yaml && argocd-vault-plugin generate app-secrets.yaml -s vault-app-cred >> staging-manifest.yaml
    mv staging-manifest.yaml manifest.yaml
    echo "--- manifest ---" >> /tmp/test.txt
    cat manifest.yaml >> /tmp/test.txt